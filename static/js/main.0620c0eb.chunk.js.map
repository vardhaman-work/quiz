{"version":3,"sources":["components/QuestionBox.js","quizService/index.js","components/Result.js","components/QuizSet.js","components/QuizInfoForm.js","App.js","serviceWorker.js","index.js"],"names":["QuestionBox","question","options","selected","useState","answers","setAnswers","className","map","text","index","key","onClick","qBank","correct","questionId","n","Promise","resolve","sort","Math","random","slice","Result","score","playAgain","QuizSet","state","questionBank","responses","time","seconds","props","quizTime","fullName","getQuestions","quizService","then","setState","completeAnswer","correctAnswer","quizEnd","startTimer","timer","setInterval","countDown","secondsToTime","quizStart","timeLeftVar","clearInterval","secs","divisor_for_minutes","divisor_for_seconds","h","floor","m","s","ceil","this","length","Component","QuizInfoForm","onSubmit","onsubmit","type","value","name","onChange","e","onchange","App","step","fullname","email","phone","inputChangeHandler","target","nextStep","prevStep","goBack","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0620c0eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst QuestionBox = ({ question, options, selected }) => {\r\n    const [answers, setAnswers] = useState(options)\r\n  return <div className=\"questionBox\">\r\n    <div className=\"question\">{question}</div>\r\n    {answers.map((text,index)=>{\r\n        return(\r\n            <button \r\n                key={index} \r\n                className=\"answerBtn\"\r\n                onClick={()=>{\r\n                    setAnswers([text])\r\n                    selected(text)\r\n                }}>\r\n                {text}\r\n            </button>\r\n        )\r\n    })}\r\n  </div>;\r\n};\r\n\r\nexport default QuestionBox;\r\n","const qBank = [\n  {\n    question:\n      \"Virgin Trains, Virgin Atlantic and Virgin Racing, are all companies owned by which famous entrepreneur?   \",\n    answers: [\"Richard Branson\", \"Alan Sugar\", \"Donald Trump\", \"Bill Gates\"],\n    correct: \"Richard Branson\",\n    questionId: \"099099\"\n  },\n  {\n    question:\n      'Where is the train station \"Llanfair­pwllgwyngyll­gogery­chwyrn­drobwll­llan­tysilio­gogo­goch\"?',\n    answers: [\"Wales\", \"Moldova\", \"Czech Republic\", \"Denmark\"],\n    correct: \"Wales\",\n    questionId: \"183452\"\n  },\n  {\n    question:\n      \"Which company did Valve cooperate with in the creation of the Vive?\",\n    answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\n    correct: \"HTC\",\n    questionId: \"267908\"\n  },\n  {\n    question: \"What's the name of Batman's  parents?\",\n    answers: [\n      \"Thomas & Martha\",\n      \"Joey & Jackie\",\n      \"Jason & Sarah\",\n      \"Todd & Mira\"\n    ],\n    correct: \"Thomas & Martha\",\n    questionId: \"333247\"\n  },\n  {\n    question: \"What is the most common surname Wales?\",\n    answers: [\"Jones\", \"Williams\", \"Davies\", \"Evans\"],\n    correct: \"Jones\",\n    questionId: \"496293\"\n  },\n  {\n    question:\n      \"What was the name of the WWF professional wrestling tag team made up of the wrestlers Ax and Smash?\",\n    answers: [\n      \"Demolition\",\n      \"The Dream Team\",\n      \"The Bushwhackers\",\n      \"The British Bulldogs\"\n    ],\n    correct: \"Demolition\",\n    questionId: \"588909\"\n  },\n  {\n    question:\n      'What name represents the letter \"M\" in the NATO phonetic alphabet?',\n    answers: [\"Mike\", \"Matthew\", \"Mark\", \"Max\"],\n    correct: \"Mike\",\n    questionId: \"648452\"\n  },\n  {\n    question: \"What is the first book of the Old Testament?\",\n    answers: [\"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\"],\n    correct: \"Genesis\",\n    questionId: \"786649\"\n  },\n  {\n    question:\n      \"In the video-game franchise Kingdom Hearts, the main protagonist, carries a weapon with what shape?\",\n    answers: [\"Key\", \"Sword\", \"Pen\", \"Cellphone\"],\n    correct: \"Key\",\n    questionId: \"839754\"\n  },\n  {\n    question:\n      \"Which best selling toy of 1983 caused hysteria, resulting in riots breaking out in stores?\",\n    answers: [\n      \"Cabbage Patch Kids\",\n      \"Transformers\",\n      \"Care Bears\",\n      \"Rubik’s Cube\"\n    ],\n    correct: \"Cabbage Patch Kids\",\n    questionId: \"98390\"\n  },\n  {\n    question: \"What does a funambulist walk on?\",\n    answers: [\"A Tight Rope\", \"Broken Glass\", \"Balls\", \"The Moon\"],\n    correct: \"A Tight Rope\",\n    questionId: \"1071006\"\n  },\n  {\n    question: \"In past times, what would a gentleman keep in his fob pocket?\",\n    answers: [\"Watch\", \"Money\", \"Keys\", \"Notebook\"],\n    correct: \"Watch\",\n    questionId: \"1174154\"\n  },\n  {\n    question: \"Area 51 is located in which US state?\",\n    answers: [\"Nevada\", \"Arizona\", \"New Mexico\", \"Utah\"],\n    correct: \"Nevada\",\n    questionId: \"1226535\"\n  },\n  {\n    question: \"How would one say goodbye in Spanish?\",\n    answers: [\"Adiós\", \" Hola\", \"Au Revoir\", \"Salir\"],\n    correct: \"Adiós\",\n    questionId: \"1310938\"\n  },\n  {\n    question: \"What is the largest organ of the human body?\",\n    answers: [\"Skin\", \"Heart\", \"large Intestine\", \"Liver\"],\n    correct: \"Skin\",\n    questionId: \"1436873\"\n  },\n  {\n    question: \"Which sign of the zodiac is represented by the Crab?\",\n    answers: [\"Cancer\", \"Libra\", \"Virgo\", \"Sagittarius\"],\n    correct: \"Cancer\",\n    questionId: \"1515110\"\n  },\n  {\n    question: \"On a dartboard, what number is directly opposite No. 1?\",\n    answers: [\"19\", \"20\", \"12\", \"15\"],\n    correct: \"19\",\n    questionId: \"1642728\"\n  },\n  {\n    question:\n      \"What does the 'S' stand for in the abbreviation SIM, as in SIM card? \",\n    answers: [\"Subscriber\", \"Single\", \"Secure\", \"Solid\"],\n    correct: \"Subscriber\",\n    questionId: \"1747256\"\n  },\n  {\n    question:\n      \"What word represents the letter 'T' in the NATO phonetic alphabet?\",\n    answers: [\"Tango\", \"Target\", \"Taxi\", \"Turkey\"],\n    correct: \"Tango\",\n    questionId: \"1822532\"\n  },\n  {\n    question: \"Which American president appears on a one dollar bill?\",\n    answers: [\n      \"George Washington\",\n      \"Thomas Jefferson\",\n      \"Abraham Lincoln\",\n      \"Benjamin Franklin\"\n    ],\n    correct: \"George Washington\",\n    questionId: \"195075\"\n  },\n  {\n    question: 'What is \"dabbing\"?',\n    answers: [\"A dance\", \"A medical procedure\", \"A sport\", \"A language\"],\n    correct: \"A dance\",\n    questionId: \"2019778\"\n  },\n  {\n    question: \"What is the name of the Jewish New Year?\",\n    answers: [\"Rosh Hashanah\", \"Elul\", \"New Year\", \"Succoss\"],\n    correct: \"Rosh Hashanah\",\n    questionId: \"2134343\"\n  },\n  {\n    question: \"Which one of the following rhythm games was made by Harmonix?\",\n    answers: [\n      \"Rock Band\",\n      \"Meat Beat Mania\",\n      \"Guitar Hero Live\",\n      \"Dance Dance Revolution\"\n    ],\n    correct: \"Rock Band\",\n    questionId: \"2210799\"\n  },\n  {\n    question:\n      \"What type of animal was Harambe, who was shot after a child fell into it's enclosure at the Cincinnati Zoo?\",\n    answers: [\"Gorilla\", \"Tiger\", \"Panda\", \"Crocodile\"],\n    correct: \"Gorilla\",\n    questionId: \"2379831\"\n  },\n  {\n    question: \"Red Vines is a brand of what type of candy?\",\n    answers: [\"Licorice\", \"Lollipop\", \"Chocolate\", \"Bubblegum\"],\n    correct: \"Licorice\",\n    questionId: \"2426418\"\n  },\n  {\n    question: \"What is the nickname of the US state of California?\",\n    answers: [\"Golden State\", \"Sunshine State\", \"Bay State\", \"Treasure State\"],\n    correct: \"Golden State\",\n    questionId: \"2510086\"\n  },\n  {\n    question: \"What is on display in the Madame Tussaud's museum in London?\",\n    answers: [\n      \"Wax sculptures\",\n      \"Designer clothing\",\n      \"Unreleased film reels\",\n      \"Vintage cars\"\n    ],\n    correct: \"Wax sculptures\",\n    questionId: \"2685745\"\n  },\n  {\n    question:\n      \"What was the nickname given to the Hughes H-4 Hercules, a heavy transport flying boat which achieved flight in 1947?\",\n    answers: [\"Spruce Goose\", \"Noah's Ark\", \"Fat Man\", \"Trojan Horse\"],\n    correct: \"Spruce Goose\",\n    questionId: \"2796884\"\n  },\n  {\n    question: \"Which of these colours is NOT featured in the logo for Google?\",\n    answers: [\"Pink\", \"Yellow\", \"Blue\", \"Green\"],\n    correct: \"Pink\",\n    questionId: \"2838900\"\n  },\n  {\n    question: 'What is the French word for \"hat\"?',\n    answers: [\"Chapeau\", \"Bonnet\", \" Écharpe\", \" Casque\"],\n    correct: \"Chapeau\",\n    questionId: \"298060\"\n  },\n  {\n    question: \"Five dollars is worth how many nickles?\",\n    answers: [\"100\", \"50\", \"25\", \"69\"],\n    correct: \"100\",\n    questionId: \"3096579\"\n  },\n  {\n    question: \"Who is depicted on the US hundred dollar bill?\",\n    answers: [\n      \"Benjamin Franklin\",\n      \"George Washington\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"Benjamin Franklin\",\n    questionId: \"3182461\"\n  },\n  {\n    question: \"What do the letters in the GMT time zone stand for?\",\n    answers: [\n      \"Greenwich Mean Time\",\n      \"Global Meridian Time\",\n      \"General Median Time\",\n      \"Glasgow Man Time\"\n    ],\n    correct: \"Greenwich Mean Time\",\n    questionId: \"3239112\"\n  },\n  {\n    question: \"Which one of these is not a typical European sword design?\",\n    answers: [\"Scimitar\", \"Falchion\", \"Ulfberht\", \"Flamberge\"],\n    correct: \"Scimitar\",\n    questionId: \"3318503\"\n  },\n  {\n    question:\n      'According to Sherlock Holmes, \"If you eliminate the impossible, whatever remains, however improbable, must be the...\"',\n    answers: [\"Truth\", \"Answer\", \"Cause\", \"Source\"],\n    correct: \"Truth\",\n    questionId: \"3410327\"\n  },\n  {\n    question: \"What is the name of Poland in Polish?\",\n    answers: [\"Polska\", \"Pupcia\", \"Polszka\", \"Póland\"],\n    correct: \"Polska\",\n    questionId: \"3542596\"\n  },\n  {\n    question: \"The New York Times slogan is, “All the News That’s Fit to…”\",\n    answers: [\"Print\", \"Digest\", \"Look\", \"Read\"],\n    correct: \"Print\",\n    questionId: \"3667517\"\n  },\n  {\n    question: \"What do the letters of the fast food chain KFC stand for?\",\n    answers: [\n      \"Kentucky Fried Chicken\",\n      \"Kentucky Fresh Cheese\",\n      \"Kibbled Freaky Cow\",\n      \"Kiwi Food Cut\"\n    ],\n    correct: \"Kentucky Fried Chicken\",\n    questionId: \"3791672\"\n  },\n  {\n    question: \"Which restaurant's mascot is a clown?\",\n    answers: [\"McDonald's\", \"Whataburger\", \"Burger King\", \"Sonic\"],\n    correct: \"McDonald's\",\n    questionId: \"3893585\"\n  },\n  {\n    question: 'What color is the \"Ex\" in FedEx Ground?',\n    answers: [\"Green\", \"Red\", \"Light Blue\", \"Orange\"],\n    correct: \"Green\",\n    questionId: \"3913430\"\n  },\n  {\n    question: \"How tall is the Burj Khalifa?\",\n    answers: [\"2,722 ft\", \"2,717 ft\", \"2,546 ft\", \"3,024 ft\"],\n    correct: \"2,722 ft\",\n    questionId: \"4049121\"\n  },\n  {\n    question:\n      \"Which of the following card games revolves around numbers and basic math?\",\n    answers: [\"Uno\", \"Go Fish\", \"Twister\", \"Munchkin\"],\n    correct: \"Uno\",\n    questionId: \"4150746\"\n  },\n  {\n    question:\n      \"What machine element is located in the center of fidget spinners?\",\n    answers: [\"Bearings\", \"Axles\", \"Gears\", \"Belts\"],\n    correct: \"Bearings\",\n    questionId: \"4235063\"\n  },\n  {\n    question: \"Which sign of the zodiac comes between Virgo and Scorpio?\",\n    answers: [\"Libra\", \"Gemini\", \"Taurus\", \"Capricorn\"],\n    correct: \"Libra\",\n    questionId: \"4321002\"\n  },\n  {\n    question: \"Which of the following presidents is not on Mount Rushmore?\",\n    answers: [\n      \"John F. Kennedy\",\n      \"Theodore Roosevelt\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"John F. Kennedy\",\n    questionId: \"4442286\"\n  },\n  {\n    question: \"What is Tasmania?\",\n    answers: [\n      \"An Australian State\",\n      \"A flavor of Ben and Jerry's ice-cream\",\n      \"A Psychological Disorder\",\n      \"The Name of a Warner Brothers Cartoon Character\"\n    ],\n    correct: \"An Australian State\",\n    questionId: \"4564430\"\n  },\n  {\n    question: \"What company developed the vocaloid Hatsune Miku?\",\n    answers: [\"Crypton Future Media\", \"Sega\", \"Sony\", \"Yamaha Corporation\"],\n    correct: \"Crypton Future Media\",\n    questionId: \"4630606\"\n  },\n  {\n    question:\n      \"Which country, not including Japan, has the most people of japanese decent?\",\n    answers: [\"Brazil\", \"China\", \"South Korea\", \"United States of America\"],\n    correct: \"Brazil\",\n    questionId: \"4795960\"\n  },\n  {\n    question: \"Which candy is NOT made by Mars?\",\n    answers: [\"Almond Joy\", \"M&M's\", \"Twix\", \"Snickers\"],\n    correct: \"Almond Joy\",\n    questionId: \"4811162\"\n  },\n  {\n    question: \"In which fast food chain can you order a Jamocha Shake?\",\n    answers: [\"Arby's\", \"McDonald's\", \"Burger King\", \"Wendy's\"],\n    correct: \"Arby's\",\n    questionId: \"4982981\"\n  }\n];\n\nexport default (n = 5) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","import React from 'react'\r\n\r\nconst Result = ({score, playAgain}) => (\r\n    <div className=\"score-board\">\r\n        <div className=\"score\">You scored {score} / 5 correct answers!</div>\r\n        <button className=\"playBtn\" onClick={playAgain}>\r\n        Play again!\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default Result;","import React, { Component } from \"react\";\r\nimport QuestionBox from \"./QuestionBox\";\r\nimport quizService from \"../quizService\";\r\nimport Result from \"./Result\";\r\nimport \"../assets/style.css\";\r\n\r\nclass QuizSet extends Component {\r\n\r\n  state = {\r\n    questionBank: [],\r\n    score: 0,\r\n    responses: 0,\r\n    time: {},\r\n    seconds: this.props.quizTime,\r\n    fullName: this.props.fullName\r\n  };\r\n\r\n  getQuestions = () => {\r\n    quizService().then(question => {\r\n      this.setState({\r\n        questionBank: question\r\n      });\r\n    });\r\n  };\r\n\r\n  completeAnswer = (answers, correctAnswer) => {\r\n    if (answers === correctAnswer) {\r\n      this.setState({\r\n        score: this.state.score + 1\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5\r\n    });\r\n\r\n    if (this.state.responses === 4) {\r\n      this.quizEnd();\r\n    }\r\n  };\r\n\r\n  secondsToTime(secs) {\r\n\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = (\"0\" + Math.floor(divisor_for_minutes / 60)).slice(-2);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = (\"0\" + Math.ceil(divisor_for_seconds)).slice(-2);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  startTimer = () => {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  };\r\n\r\n  countDown = () => {\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds == 0) {\r\n      this.quizEnd();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n    this.quizStart();\r\n  }\r\n\r\n  quizStart = () => {\r\n    this.timer = 0;\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n    this.startTimer();\r\n  };\r\n\r\n  quizEnd = () => {\r\n    clearInterval(this.timer);\r\n    this.setState({\r\n      responses: 5,\r\n      seconds: this.props.quizTime\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"card p-3 my-3\">\r\n        <div className=\"title\">\r\n          <span>Quiz: {this.state.fullName}</span> {this.state.time.m}:\r\n          {this.state.time.s}\r\n        </div>\r\n        {this.state.questionBank.length > 0 &&\r\n          this.state.responses < 5 &&\r\n          this.state.questionBank.map(\r\n            ({ question, answers, correct, questionId }) => (\r\n              <QuestionBox\r\n                question={question}\r\n                options={answers}\r\n                selected={answers => this.completeAnswer(answers, correct)}\r\n                key={questionId}\r\n              />\r\n            )\r\n          )}\r\n\r\n        {this.state.responses === 5 ? (\r\n          <Result\r\n            score={this.state.score}\r\n            playAgain={() => {\r\n              this.getQuestions();\r\n              this.quizStart();\r\n              this.setState({\r\n                score: 0,\r\n                responses: 0\r\n              });\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* <button onClick={this.props.goBack}></button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizSet;\r\n","import React from \"react\";\r\n\r\nconst QuizInfoForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onsubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          value={props.fullName}\r\n          name=\"fullname\"\r\n          className=\"form-control\"\r\n          onChange={(e) => props.onchange(e)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary w-100\" name=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default QuizInfoForm;\r\n","import React, { Component } from \"react\";\r\nimport QuizSet from \"./components/QuizSet\";\r\nimport QuizInfoForm from \"./components/QuizInfoForm\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    step: 1,\r\n    fullname: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      fullname: e.target.value\r\n    })\r\n  };\r\n\r\n  nextStep = () => {\r\n    let { step } = this.state;\r\n    this.setState({\r\n      step: step + 1\r\n    });\r\n  };\r\n\r\n  prevStep = () => {\r\n    let { step } = this.state;\r\n    this.setState({\r\n      step: step - 1\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { step } = this.state;\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <div className=\"container\">\r\n          <div className=\"card p-3 my-5 col-12 col-md-6 offset-md-3 box-shadow\">\r\n            <h1 className=\"text-center\">Quiz</h1>\r\n            <QuizInfoForm\r\n              value=\"HW\"\r\n              fullName={this.state.fullname}\r\n              onchange={this.inputChangeHandler}\r\n              onsubmit={this.nextStep}\r\n            />\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case 2:\r\n        return (\r\n          <div className=\"container\">\r\n            <QuizSet\r\n              fullName={this.state.fullname}\r\n              quizTime=\"20\"\r\n              goBack={this.prevStep}\r\n            />\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      fullname: this.state.fullname \r\n    })\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}